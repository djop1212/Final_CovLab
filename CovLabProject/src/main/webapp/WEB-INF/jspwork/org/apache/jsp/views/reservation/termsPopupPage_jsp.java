/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.66
 * Generated at: 2021-07-23 07:14:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.reservation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import reservation.model.vo.Vaccine;
import reservation.model.vo.Members;
import reservation.model.vo.Hospital;

public final class termsPopupPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("reservation.model.vo.Vaccine");
    _jspx_imports_classes.add("reservation.model.vo.Members");
    _jspx_imports_classes.add("reservation.model.vo.Hospital");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

Hospital hp = (Hospital) request.getAttribute("hp");
Members mb = (Members) request.getAttribute("mb");
Vaccine vac = (Vaccine) request.getAttribute("vac");


      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".inputBox {\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input:focus {\r\n");
      out.write("	outline: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function agree(serial, rn, reg, rev){\r\n");
      out.write("		\r\n");
      out.write("	 	if (document.getElementById(\"agreeCheck\").checked != true){\r\n");
      out.write("	 		alert(\"약관에 동의하십시오.\");\r\n");
      out.write("		}else{\r\n");
      out.write("			var url=\"/semi/insertres\";\r\n");
      out.write("			var fnm = document.info;\r\n");
      out.write("			var serial_num = fnm.serial_num.value;\r\n");
      out.write("			var user_rn =fnm.user_rn.value;\r\n");
      out.write("			var reg_bus_no = fnm.reg_bus_no.value;\r\n");
      out.write("			var ioc_date = fnm.ioc.value\r\n");
      out.write("			\r\n");
      out.write("	        fnm.method = \"post\";\r\n");
      out.write("	        fnm.action = url;\r\n");
      out.write("	        alert(\"실행\");\r\n");
      out.write("	        \r\n");
      out.write("	        fnm.submit();\r\n");
      out.write("		}\r\n");
      out.write("	 	\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("		<div class=\"col-lg-3 p-0 \">\r\n");
      out.write("			<div class=\"card h-100 m-0\">\r\n");
      out.write("				<div class=\"card_header\"></div>\r\n");
      out.write("				<div class=\"card-body\">\r\n");
      out.write("					<h5 class=\"card-title text-center\">접종 정보</h5>\r\n");
      out.write("\r\n");
      out.write("					<form action=\"/semi/insertres\" method=\"post\" name=\"info\">\r\n");
      out.write("					\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"user_name\">이름 : </label> <input type=\"text\"\r\n");
      out.write("								name=\"user_name\" value=\"");
      out.print(mb.getUserName());
      out.write("\" readonly\r\n");
      out.write("								class=\"inputBox\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"hp_phone\">주민번호 : </label><input type=\"text\"\r\n");
      out.write("								name=\"user_rn\" value=\"");
      out.print(mb.getUserRn());
      out.write("\" readonly\r\n");
      out.write("								class=\"inputBox\" id=\"rn\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"user_address\">주소 : </label><input type=\"text\"\r\n");
      out.write("								name=\"user_address\" value=\"");
      out.print(mb.getUserAddress());
      out.write("\" readonly\r\n");
      out.write("								class=\"inputBox\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"\">기관명 : </label> <input type=\"text\" name=\"hp_name\"\r\n");
      out.write("								value=\"");
      out.print(hp.getHp_name());
      out.write("\" readonly class=\"inputBox\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label>백신 : </label> <input type=\"text\" name=\"vac_name\"\r\n");
      out.write("								value=\"");
      out.print(vac.getVac_name());
      out.write("\" readonly class=\"inputBox\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"form-group\">\r\n");
      out.write("							<label>예약 날짜 : </label> <input type=\"text\" name=\"ioc_date\"\r\n");
      out.write("								value=\"");
      out.print( request.getAttribute("ioc_date") );
      out.write("\" readonly class=\"inputBox\" id=\"ioc\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<input type=\"hidden\" name=\"serial_num\" value=");
      out.print( vac.getSerial_num() );
      out.write(" class=\"inputBox\" id=\"serial\">\r\n");
      out.write("						<input type=\"hidden\" name=\"reg_bus_no\" value=");
      out.print( hp.getReg_bus_no() );
      out.write(" class=\"inputBox\" id=\"reg\">\r\n");
      out.write("						<!-- 						<div class=\"form-group\">\r\n");
      out.write("							<label for=\"\">예약일시 : </label> <input type=\"text\" name=\"rev_date\"\r\n");
      out.write("								value=\"2021-06-29 09:30:00\" readonly id=\"inputBox\"> <br>\r\n");
      out.write("							<a href=\"javascript:void(0)\" target=\"_blank\"\r\n");
      out.write("								onclick=\"reservationDatePopup()\">날짜 선택</a>\r\n");
      out.write("						</div> -->\r\n");
      out.write("						<input type=\"hidden\" name=\"reg_bus_no\"\r\n");
      out.write("							value=");
      out.print(hp.getReg_bus_no());
      out.write(" class=\"inputBox\">\r\n");
      out.write("\r\n");
      out.write("						<textarea class=\"form-control h-25\" rows=\"10\">\r\n");
      out.write("						제1조(목적) 이 법은 사업자가 그 거래상의 지위를 남용하여 불공정한 내용의 약관(約款)을 작성하여 거래에 사용하는 것을 방지하고 불공정한 내용의 약관을 규제함으로써 건전한 거래질서를 확립하고, 이를 통하여 소비자를 보호하고 국민생활을 균형 있게 향상시키는 것을 목적으로 한다.\r\n");
      out.write("						제2조(정의) 이 법에서 사용하는 용어의 정의는 다음과 같다.\r\n");
      out.write("\r\n");
      out.write("						1. “약관”이란 그 명칭이나 형태 또는 범위에 상관없이 계약의 한쪽 당사자가 여러 명의 상대방과 계약을 체결하기 위하여 일정한 형식으로 미리 마련한 계약의 내용을 말한다.\r\n");
      out.write("\r\n");
      out.write("						2. “사업자”란 계약의 한쪽 당사자로서 상대 당사자에게 약관을 계약의 내용으로 할 것을 제안하는 자를 말한다.\r\n");
      out.write("\r\n");
      out.write("						3. “고객”이란 계약의 한쪽 당사자로서 사업자로부터 약관을 계약의 내용으로 할 것을 제안받은 자를 말한다.\r\n");
      out.write("						</textarea>\r\n");
      out.write("						<div class=\"text-center\">\r\n");
      out.write("							<input type=\"checkbox\" id=\"agreeCheck\" ><span>약관에 동의합니다.</span>\r\n");
      out.write("						</div>\r\n");
      out.write("						<input type=\"button\" onclick=\"agree('serial', 'rn', 'reg', 'ioc')\" value=\"예약확인\">\r\n");
      out.write("\r\n");
      out.write("					</form>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
